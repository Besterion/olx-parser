name: CI - Build & OLX Parser

on:
  push:
    branches: [ master ]
  schedule:
    - cron: "*/5 * * * *"  # –ö–æ–∂–Ω—ñ 5 —Ö–≤–∏–ª–∏–Ω
  workflow_dispatch:        # –ú–æ–∂–Ω–∞ –∑–∞–ø—É—Å–∫–∞—Ç–∏ –≤—Ä—É—á–Ω—É

jobs:
  run-parser:
    runs-on: ubuntu-latest

    env:
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID:  ${{ secrets.TELEGRAM_CHAT_ID }}

    steps:
      - name: üõé –ö–ª–æ–Ω—É–≤–∞–Ω–Ω—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é
        uses: actions/checkout@v3

      - name: ‚öôÔ∏è –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: ‚è±Ô∏è –ö–µ—à—É–≤–∞–Ω–Ω—è NuGet-–ø–∞–∫–µ—Ç—ñ–≤
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: üì¶ –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
        run: dotnet restore

      - name: üî® Build
        run: dotnet build --configuration Release

      - name: üöÄ –ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞
        run: dotnet run --project OLXParserBot.csproj

      - name: üíæ –ö–æ–º—ñ—Ç –æ–Ω–æ–≤–ª–µ–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤ (*.txt)
        if: ${{ success() }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add *.txt
          if git diff --cached --quiet; then
            echo "‚úÖ –ù–µ–º–∞—î –∑–º—ñ–Ω ‚Äî –ø—É—à–∏—Ç–∏ –Ω—ñ—á–æ–≥–æ."
          else
            git commit -m "update: parser data [skip ci]"
            git pull --rebase
            git push
          fi